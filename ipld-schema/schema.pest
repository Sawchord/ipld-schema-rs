file = { SOI ~ ((type | comment) ~ multispace*)+ ~ EOI }

comment_line = { whitespace* ~ "#" ~ whitespace* ~ comment_line_content ~ (newline*) }
// TODO: Fix the values that can be contained
comment_line_content = { ('A'..'Z' | 'a'..'z' | "'" | whitespace)* }
comment              = { comment_line+ }

type      = { "type" ~ whitespace+ ~ type_name ~ whitespace+ ~ type_def }
type_name = { ('A' .. 'Z') ~ ('A' .. 'Z' | 'a' .. 'z' | '0'..'9' | "_")* }
type_def  = {
    "bool"
  | "string"
  | "int"
  | "float"
  | "any"
  | "bytes"
  | enum_def
  | link_def
  | unit_def
}

enum_def              = { "enum" ~ whitespace* ~ "{" ~ enum_field+ ~ multispace* ~ "}" ~ (whitespace* ~ enum_repr)? }
enum_field            = { multispace* ~ (comment)? ~ whitespace* ~ "|" ~ whitespace* ~ type_name ~ (whitespace* ~ enum_field_repr)? }
enum_field_repr       = { "(\"" ~ enum_field_repr_value ~ "\")" }
enum_field_repr_value = { (('A' .. 'Z') ~ ('A' .. 'Z' | 'a' .. 'z' | '0'..'9' | "_")* | ('0'..'9')*) }
enum_repr             = { "representation" ~ whitespace+ ~ enum_repr_value }
enum_repr_value       = { "int" | "string" }

link_def = { "&" ~ whitespace* ~ type_name }

unit_def  = { "unit" ~ whitespace+ ~ "representation" ~ whitespace+ ~ unit_repr }
unit_repr = { "null" | "true" | "false" | "emptymap" }

multispace = _{ newline | whitespace }
newline    = _{ "\n" | "\r\n" }
whitespace = _{ " " | "\t" }
